# For licensing see accompanying LICENSE file.
# Copyright (C) 2024 Apple Inc. All Rights Reserved.
# Adapted from: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "tool_sandbox"
version = "0.0.1"
description = "A controllable, stateful and interactive sandbox for agent evaluation"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Jiarui Lu", email = "jiarui_lu@apple.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "anthropic==0.26.1",
    "ccy==1.3.1",
    "decorator==5.1.1",
    "dill==0.3.8",
    "geopy==2.4.1",
    "holidays==0.51",
    "huggingface_hub==0.23.4",
    "jsonschema==4.19.2",
    "langchain==0.1.3",
    "networkx==3.2.1",
    "numpy==1.26.4",
    "openai==1.17.0",
    "phonenumbers==8.13.39",
    "pint==0.23",
    "polars==0.20.31",
    "pydantic==2.7.4",
    "pyyaml==6.0.1",
    "rapidfuzz==3.9.3",
    "requests==2.32.3",
    "rouge-score==0.1.2",
    "scipy==1.13.1",
    "sentencepiece==0.2.0",
    "StrEnum==0.4.15",
    "tenacity==8.4.1",
    "transformers==4.41.2",
    "tree-sitter==0.22.3",
    "tree-sitter-languages==1.10.2",
    "typing_extensions==4.12.2",
    "vertexai==1.49.0",
]

[project.urls]
Homepage = "https://github.pie.apple.com/foundation-models/ToolSandbox"
Issues = "https://github.pie.apple.com/foundation-models/ToolSandbox/issues"


[project.optional-dependencies]
dev = [
    "genbadge[all]",
    "google-auth-stubs",
    "mypy",
    "pre-commit",
    "pyarrow==16.1.0", # < for converting polars to pandas dataframes
    "pydantic-extra-types",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
    "ruff",
    "seaborn==0.13.2",
    "types-decorator",
    "types-networkx",
    "types-requests",
    "types-tornado",
    "types-tqdm",
    "types-PyYAML",
]

[project.scripts]
tool_sandbox = "tool_sandbox.cli:main"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = ["I"]
ignore = ["F841"]

[tool.ruff.lint.per-file-ignores]
# Ignore `F401` (unusesd import) in all `__init__.py` files, and in `path/to/file.py`.
"__init__.py" = ["F401"]

[tool.setuptools.packages.find]
exclude = ["data/"]

# Configure pytest to parallelize test execution. This configuration is used e.g.
# - by VSCode's built-in testing extension
# - when running `pytest .` on the command line
[tool.pytest.ini_options]
addopts="-n auto"

[tool.mypy]
# The options below are what `--strict` encompasses.
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
extra_checks = true
implicit_reexport = false
strict_equality = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
